-- MySQL Script generated by MySQL Workbench
-- 02/14/15 13:15:22
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema olympiaad
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema olympiaad
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `olympiaad` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `olympiaad` ;

-- -----------------------------------------------------
-- Table `olympiaad`.`class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `olympiaad`.`class` (
  `idClass` INT NOT NULL AUTO_INCREMENT,
  `class` INT(2) NOT NULL,
  PRIMARY KEY (`idClass`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `olympiaad`.`teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `olympiaad`.`teacher` (
  `idTeacher` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTeacher`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `olympiaad`.`results`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `olympiaad`.`results` (
  `idResults` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `listening` FLOAT(4,2) NULL,
  `langStructure` FLOAT(4,2) NULL,
  PRIMARY KEY (`idResults`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `olympiaad`.`school`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `olympiaad`.`school` (
  `idSchool` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idSchool`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `olympiaad`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `olympiaad`.`student` (
  `idStudent` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) BINARY NOT NULL,
  `class_idClass` INT NOT NULL,
  `school_idSchool` INT NOT NULL,
  `teacher_idTeacher` INT UNSIGNED NOT NULL,
  `results_idResults` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idStudent`),
  INDEX `fk_student_class1_idx` (`class_idClass` ASC),
  INDEX `fk_student_teacher1_idx` (`teacher_idTeacher` ASC),
  INDEX `fk_student_results1_idx` (`results_idResults` ASC),
  INDEX `fk_student_school1_idx` (`school_idSchool` ASC),
  CONSTRAINT `fk_student_class1`
    FOREIGN KEY (`class_idClass`)
    REFERENCES `olympiaad`.`class` (`idClass`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_student_teacher1`
    FOREIGN KEY (`teacher_idTeacher`)
    REFERENCES `olympiaad`.`teacher` (`idTeacher`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_student_results1`
    FOREIGN KEY (`results_idResults`)
    REFERENCES `olympiaad`.`results` (`idResults`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_student_school1`
    FOREIGN KEY (`school_idSchool`)
    REFERENCES `olympiaad`.`school` (`idSchool`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

BEGIN;
INSERT INTO `olympiaad`.`school`(name) VALUES ("Pärnu Koidula Gümnaasium"),
	("Pärnu-Jaagupi Gümnaasium"),
    ("Pärnu Ülejõe gümnaasium"),
    ("Pärnu Ühisgümnaasium"),
    ("Pärnu Vene Gümnaasium"),
    ("Pärnu Hansagümnaasium");
INSERT INTO `olympiaad`.`class`(class) VALUES (12),(11),(10);

INSERT INTO `olympiaad`.`teacher`(fname,lname) VALUES ("Tiina","Hendrikson"),
	("Aino","Siniväli"),
    ("Kai","Kõks"),
    ("Elle", "Kera"),
    ("Bella","Aivazova"),
    ("Reet","Ojasoo"),
    ("Eve","Merila"),
    ("Tiiu","Tõnisson"),
    ("Kärt","Jakobson");

-- ID, fname, lname, class, school, teacher, results
INSERT INTO `olympiaad`.`student` VALUES (1,"Sander","Tamm",1,1,1,1);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (20,16);

INSERT INTO `olympiaad`.`student` VALUES (2,"Tõnn","Vaher",1,2,2,2);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (11,8);

INSERT INTO `olympiaad`.`student` VALUES (3,"Kristiina","Ojamets",1,3,3,3);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (16,11);

INSERT INTO `olympiaad`.`student` VALUES (4,"Mikk","Golubtsov",2,4,4,4);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (17,13);

INSERT INTO `olympiaad`.`student` VALUES (5,"Rei","Meier",2,5,5,5);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (13,7.5);

INSERT INTO `olympiaad`.`student` VALUES (6,"Anita","Jaanson",2,6,6,6);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (15,9);

INSERT INTO `olympiaad`.`student` VALUES (7,"Edwin","Lee",3,6,6,7);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (10,11);

INSERT INTO `olympiaad`.`student` VALUES (8,"Laura","Pampa",3,4,7,8);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (18,11);

INSERT INTO `olympiaad`.`student` VALUES (9,"Isaac","Rubin",3,1,8,9);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (15.5,16);

INSERT INTO `olympiaad`.`student` VALUES (10,"Anti","Bertel",2,2,2,10);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (11,15);

INSERT INTO `olympiaad`.`student` VALUES (11,"Helen","Pelju",1,3,3,11);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (16.5,14.5);

INSERT INTO `olympiaad`.`student` VALUES (12,"Kaspar","Vahter",1,1,1,12);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (17.5,17);

INSERT INTO `olympiaad`.`student` VALUES (13,"Joosep","Raiend",3,3,9,13);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (14,11);

INSERT INTO `olympiaad`.`student` VALUES (14,"Hedi","Haas",3,6,6,14);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (12.5,8);

INSERT INTO `olympiaad`.`student` VALUES (15,"Mihkel","Paalberg",3,3,9,15);
INSERT INTO `olympiaad`.`results`(listening,langStructure) VALUES (17.5,8.5);
COMMIT;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

/*
use olympiaad;
select * from results;
-- nimi,punktid,kokku järjestatud kahanevalt
select student.fname,student.lname, results.listening, results.langStructure, results.listening + results.langStructure AS kokku from student 
	JOIN results ON results.idResults = student.idStudent order by kokku desc; 
-- 12. klass nimi,punktid,kokku järjestatud kahanevalt
select student.fname,student.lname, results.listening, results.langStructure, results.listening + results.langStructure AS kokku from student 
	JOIN results ON results.idResults = student.idStudent where student.class_idClass = 1 order by kokku desc;
-- nimi,õpetaja,punktid,kokku järjestatud kahanevalt  
select student.fname,student.lname,teacher.fname,teacher.lname, results.listening, results.langStructure, results.listening + results.langStructure AS kokku from student 
	JOIN results ON results.idResults = student.idStudent
    JOIN teacher ON teacher.idTeacher = student.teacher_idTeacher order by kokku desc;
-- nimi,õpetaja,punktid,kokku järjestatud kahanevalt,õpetaja Ojasoo  
select student.fname,student.lname,teacher.fname,teacher.lname, results.listening, results.langStructure, results.listening + results.langStructure AS kokku from student 
	JOIN results ON results.idResults = student.idStudent
    JOIN teacher ON teacher.idTeacher = student.teacher_idTeacher where teacher.lname LIKE "Ojasoo" order by kokku desc;
    -- nimi,õpetaja,punktid,kokku järjestatud kahanevalt,õpetaja Ojasoo, kokku suurem/võrdne 21   
select student.fname,student.lname,teacher.fname,teacher.lname, results.listening, results.langStructure, results.listening + results.langStructure AS kokku from student 
	JOIN results ON results.idResults = student.idStudent
    JOIN teacher ON teacher.idTeacher = student.teacher_idTeacher where teacher.lname LIKE "Ojasoo" and results.listening + results.langStructure >= 21 order by kokku desc;    

*/
