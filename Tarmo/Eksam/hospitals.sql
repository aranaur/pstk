-- MySQL Script generated by MySQL Workbench
-- 02/28/15 09:42:40
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema hospital
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hospital
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hospital` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `hospital` ;

-- -----------------------------------------------------
-- Table `hospital`.`MentalHospitals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`MentalHospitals` (
  `MH_ID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `MentalHospital` VARCHAR(45) NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  `StreetName` VARCHAR(45) NOT NULL,
  `StreetNr` INT(11) NOT NULL,
  PRIMARY KEY (`MH_ID`),
  UNIQUE INDEX `MH_ID_UNIQUE` (`MH_ID` ASC),
  UNIQUE INDEX `MentalHospital_UNIQUE` (`MentalHospital` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hospital`.`Patients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`Patients` (
  `PA_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NOT NULL,
  `Lastname` VARCHAR(45) NOT NULL,
  `DateOfBirth` DATE NOT NULL,
  `Gender` ENUM('Female', 'Male') NOT NULL,
  `MentalHospitals_MH_ID` INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (`PA_ID`),
  UNIQUE INDEX `PA_ID_UNIQUE` (`PA_ID` ASC),
  INDEX `fk_Patients_MentalHospitals_idx` (`MentalHospitals_MH_ID` ASC),
  CONSTRAINT `fk_Patients_MentalHospitals`
    FOREIGN KEY (`MentalHospitals_MH_ID`)
    REFERENCES `hospital`.`MentalHospitals` (`MH_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hospital`.`Doctors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`Doctors` (
  `D_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `Speciality` VARCHAR(45) NOT NULL,
  `MentalHospitals_MH_ID` INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (`D_ID`),
  UNIQUE INDEX `D_ID_UNIQUE` (`D_ID` ASC),
  INDEX `fk_Doctors_MentalHospitals1_idx` (`MentalHospitals_MH_ID` ASC),
  CONSTRAINT `fk_Doctors_MentalHospitals1`
    FOREIGN KEY (`MentalHospitals_MH_ID`)
    REFERENCES `hospital`.`MentalHospitals` (`MH_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hospital`.`Illnesses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`Illnesses` (
  `I_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Illness` VARCHAR(45) NOT NULL,
  `Curable` TINYINT(1) NOT NULL,
  PRIMARY KEY (`I_ID`),
  UNIQUE INDEX `I_ID_UNIQUE` (`I_ID` ASC),
  UNIQUE INDEX `Illness_UNIQUE` (`Illness` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hospital`.`PatientsIllnessesRelations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`PatientsIllnessesRelations` (
  `PIR_ID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Patients_PA_ID` INT UNSIGNED NOT NULL,
  `Illnesses_I_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`PIR_ID`),
  INDEX `fk_Patients_has_Illnesses_Illnesses1_idx` (`Illnesses_I_ID` ASC),
  INDEX `fk_Patients_has_Illnesses_Patients1_idx` (`Patients_PA_ID` ASC),
  UNIQUE INDEX `PIR_ID_UNIQUE` (`PIR_ID` ASC),
  CONSTRAINT `fk_Patients_has_Illnesses_Patients1`
    FOREIGN KEY (`Patients_PA_ID`)
    REFERENCES `hospital`.`Patients` (`PA_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patients_has_Illnesses_Illnesses1`
    FOREIGN KEY (`Illnesses_I_ID`)
    REFERENCES `hospital`.`Illnesses` (`I_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hospital`.`DoctorsPatientsRelations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hospital`.`DoctorsPatientsRelations` (
  `DPR_ID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Doctors_D_ID` INT UNSIGNED NOT NULL,
  `Patients_PA_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`DPR_ID`),
  INDEX `fk_Doctors_has_Patients_Patients1_idx` (`Patients_PA_ID` ASC),
  INDEX `fk_Doctors_has_Patients_Doctors1_idx` (`Doctors_D_ID` ASC),
  UNIQUE INDEX `DPR_ID_UNIQUE` (`DPR_ID` ASC),
  CONSTRAINT `fk_Doctors_has_Patients_Doctors1`
    FOREIGN KEY (`Doctors_D_ID`)
    REFERENCES `hospital`.`Doctors` (`D_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Doctors_has_Patients_Patients1`
    FOREIGN KEY (`Patients_PA_ID`)
    REFERENCES `hospital`.`Patients` (`PA_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




-- Andmed tabelitesse --

INSERT INTO MentalHospitals VALUES(1, "New York State Psychiatric Institute", "New York", "Riverside Drive", 1051),
(2, "Manhattan Psychiatric Center", "New York", "Ward's Island", 10035), 
(3, "Austen Riggs Center", "Stockbridge", "Main Street", 25);

INSERT INTO Patients VALUES (1, "George", "Franklin","1960-10-20", "Male", 3), 
(2, "Ben", "Washington", "1930-02-15", "Male", 2), (3, "Abraham", "Bush", "1935-06-05", "Male", 2);

INSERT INTO Doctors VALUES (1, "Jim", "Bailey", "Psychiatrist", 1),
(2, "Jeanne", "Doe", "Psychiatrist", 3), (3, "John", "Moore", "Psychiatrist", 2); 

INSERT INTO Illnesses VALUES (1, "Schizophrenia", FALSE), (2, "Pyromania", TRUE), (3, "Misophonia", FALSE);

INSERT INTO PatientsIllnessesRelations VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1), (4, 3, 2);

INSERT INTO DoctorsPatientsRelations VALUES (1, 2, 1), (2, 3, 2), (3, 3, 3);
